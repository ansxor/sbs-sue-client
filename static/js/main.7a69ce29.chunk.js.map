{"version":3,"sources":["components/sidebar/TabButton.jsx","components/sidebar/UserTabButton.jsx","components/sidebar/TabList.jsx","components/sidebar/UploadTab.jsx","components/sidebar/ActivityTab.jsx","components/sidebar/CategoryItem.jsx","components/sidebar/ContentItem.jsx","components/sidebar/CategoryTab.jsx","components/sidebar/UserSigninTab.jsx","components/sidebar/UserInfoTab.jsx","components/sidebar/Sidebar.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["TabButton","props","onClick","selectEvent","icon","className","selected","UserTabButton","useState","userImg","setUserImg","useEffect","usertoken","fetch","headers","authorization","then","res","json","data","avatar","catch","err","console","error","src","alt","TabList","selectedTab","setSelectedTab","style","gridTemplateColumns","map","i","memo","UploadTab","uploadedImage","setUploadedImage","visible","changeHeader","onChange","event","file","target","files","URL","createObjectURL","type","accept","maxWidth","maxHeight","margin","display","ActivityTab","CategoryItem","clickEvent","id","name","ContentItem","to","textDecoration","viewCache","CategoryTab","categoryID","setCategoryID","categoryMetadata","setCategoryMetadata","categories","setCategories","contents","setContents","loadingContent","setLoadingContent","switchCategory","newId","cachedCategoryID","category","content","metadata","params","JSON","stringify","parentIds","sort","url","parentId","pop","filter","x","cursor","c","UserSigninTab","username","setUsername","password","setPassword","value","evt","requestBody","log","method","body","text","localStorage","setItem","setToken","UserInfoTab","Sidebar","tab","setTab","headerDisplay","setHeaderDisplay","flex","overflow","TestCommentView","lazy","TestPageView","Home","App","getItem","token","mainContentRef","useRef","current","ref","fallback","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7a69ce29.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction TabButton(props) {\r\n  function selectOption() {\r\n    if (props.selectEvent) props.selectEvent(props.icon);\r\n  }\r\n\r\n  return (\r\n    <button onClick={selectOption} className={props.selected ? \"selected\" : \"\"}>\r\n      <i className={`fa fa-${props.icon}`}></i>\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default TabButton;\r\n","import React, { useEffect, useState } from \"react\";\n\nfunction UserTabButton(props) {\n  const [userImg, setUserImg] = useState(\"\");\n\n  function selectOption() {\n    if (props.selectEvent) props.selectEvent(\"user\");\n  }\n\n  useEffect(() => {\n    if (props.usertoken && props.usertoken !== \"\") {\n      fetch(\"https://newdev.smilebasicsource.com/api/User/me\", {\n        headers: {\n          authorization: `Bearer ${props.usertoken}`,\n        },\n      })\n        .then((res) => res.json())\n        .then((data) =>\n          setUserImg(\n            `https://newdev.smilebasicsource.com/api/file/raw/${data.avatar}?size=64&crop=true`\n          )\n        )\n        .catch((err) => console.error(err));\n    }\n  }, [props.usertoken]);\n\n  return (\n    <button onClick={selectOption} className={props.selected ? \"selected\" : \"\"}>\n      {(userImg === \"\" || props.usertoken === \"\") ? (\n        <i className={`fa fa-user`} />\n      ) : (\n        <img src={userImg} alt=\"User Avatar\" />\n      )}\n    </button>\n  );\n}\n\nexport default UserTabButton;\n","import React, { memo, useState } from \"react\";\r\nimport \"./TabList.css\";\r\nimport TabButton from \"./TabButton.jsx\";\r\nimport UserTabButton from \"./UserTabButton.jsx\";\r\n\r\nfunction TabList(props) {\r\n  const [selectedTab, setSelectedTab] = useState(\"folder\");\r\n  const iconList = [\"upload\", \"list-alt\", \"folder\", \"heart\"];\r\n  const offlineIconList = [\"folder\"];\r\n\r\n  function selectEvent(icon) {\r\n    setSelectedTab(icon);\r\n    if (props.selectEvent) props.selectEvent(icon);\r\n  }\r\n\r\n  return (\r\n    <div className=\"tabList\"\r\n      style={{\r\n        gridTemplateColumns: (props.usertoken === \"\") ? \"1fr 1fr\" : \"1fr 1fr 1fr 1fr 1fr\"\r\n      }}>\r\n      {(props.usertoken !== \"\") ? iconList.map((i) => (\r\n        <TabButton\r\n          key={i}\r\n          selectEvent={selectEvent}\r\n          icon={i}\r\n          selected={i === selectedTab ? true : false}\r\n        />\r\n      )) : offlineIconList.map((i) => (\r\n        <TabButton\r\n          key={i}\r\n          selectEvent={selectEvent}\r\n          icon={i}\r\n          selected={i === selectedTab ? true : false} />\r\n      ))}\r\n      <UserTabButton selected={\"user\" === selectedTab ? true : false} selectEvent={selectEvent} usertoken={props.usertoken} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default memo(TabList);\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nfunction UploadTab(props) {\r\n  const [uploadedImage, setUploadedImage] = useState(\"\");\r\n\r\n  function handleChange(event) {\r\n    const file = event.target.files[0];\r\n    if (file) setUploadedImage(URL.createObjectURL(file));\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (props.visible === true) {\r\n      props.changeHeader(\"Upload Image\");\r\n    }\r\n  }, [props]);\r\n\r\n  return (\r\n    <div>\r\n      <input\r\n        style={{}}\r\n        onChange={handleChange}\r\n        type=\"file\"\r\n        accept=\"image/*\"\r\n      ></input>\r\n      <img\r\n        src={uploadedImage}\r\n        alt=\"Pasted content\"\r\n        style={{\r\n          maxWidth: \"100%\",\r\n          maxHeight: \"100%\",\r\n          margin: \"auto\",\r\n          display: \"block\",\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UploadTab;\r\n","import React, {useEffect} from \"react\";\r\n\r\nfunction ActivityTab(props) {\r\n  useEffect(() => {\r\n    if (props.visible === true) {\r\n      props.changeHeader(\"Activity\");\r\n    }\r\n  }, [props]);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        margin: \"900px\",\r\n      }}\r\n    >\r\n      HOAISDHIOASDHOASIDHOASIHDoAS\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ActivityTab;\r\n","import React from \"react\";\r\nimport \"./CategoryViewItem.css\";\r\n\r\nfunction CategoryItem(props) {\r\n  return (\r\n    <button onClick={() => props.clickEvent(props.id)}>\r\n      <i className=\"fa fa-folder-open\"></i> {props.name}\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default CategoryItem;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./CategoryViewItem.css\";\r\n\r\nfunction ContentItem(props) {\r\n  return (\r\n    <Link to={`/sbs-sue-client/page/${props.id}`} style={{\r\n      textDecoration: \"none\"\r\n    }}>\r\n      <button> \r\n        <i className=\"fa fa-file\"></i> {props.name}\r\n      </button>\r\n    </Link>\r\n  );\r\n}\r\n\r\nexport default ContentItem;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport CategoryItem from \"./CategoryItem.jsx\";\r\nimport ContentItem from \"./ContentItem.jsx\";\r\n\r\nlet viewCache = {};\r\n\r\n// TODO: Category button should bring back to root\r\n\r\nfunction CategoryTab(props) {\r\n  const [categoryID, setCategoryID] = useState(props.id || 0);\r\n  const [categoryMetadata, setCategoryMetadata] = useState({name: \"\", id: 0});\r\n  const [categories, setCategories] = useState([]);\r\n  const [contents, setContents] = useState([]);\r\n  const [loadingContent, setLoadingContent] = useState(false);\r\n\r\n  useEffect(() => {\r\n    let cachedCategoryID = categoryID;\r\n    if (viewCache[cachedCategoryID]) {\r\n      // we need to do safety checks against every single one of these just to make sure that the program\r\n      // doesn't try to overwrite anything when quickly switching between categories, this doesn't 100%\r\n      // work but it's something lol\r\n      // TODO: We should really just disable loading another category instead\r\n      if (cachedCategoryID === categoryID)\r\n        if (viewCache[categoryID].category !== {})\r\n          setCategories(viewCache[categoryID].category);\r\n        else setCategories([]);\r\n      if (cachedCategoryID === categoryID)\r\n        if (viewCache[categoryID].content !== {})\r\n          setContents(viewCache[categoryID].content);\r\n        else setContents([]);\r\n      if (cachedCategoryID === categoryID)\r\n        if (viewCache[categoryID].metadata !== {})\r\n          setCategoryMetadata(viewCache[categoryID].metadata);\r\n        else setCategoryMetadata({});\r\n    }\r\n    const params = JSON.stringify({\r\n      parentIds: [categoryID],\r\n      sort: \"name\",\r\n    });\r\n    const url = `https://newdev.smilebasicsource.com/api/Read/chain?requests=content-${params}&content=id,parentid,name&requests=category-${params}&category=id,parentId,name&requests=category.0parentId`;\r\n    setLoadingContent(true);\r\n    fetch(url)\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        // if the category isn't the root id, then extract the metadata about the current category\r\n        let metadata = { name: \"[Root]\", parentId: 0, id: 0 };\r\n        // TODO: This fails with some categories where there is only one subcategory\r\n        if (categoryID !== 0) {\r\n          metadata = data.category.pop();\r\n        }\r\n        setCategoryMetadata(metadata);\r\n        if (data.category) setCategories(data.category);\r\n        else setCategories([]);\r\n        if (data.content) {\r\n          // This is to filter out all of the garbage user pages at the root directory\r\n          if (categoryID === 0) {\r\n            data.content = data.content.filter((x) => x.name !== \"Userpage\");\r\n          }\r\n          setContents(data.content);\r\n        } else setContents([]);\r\n        setLoadingContent(false);\r\n        viewCache[categoryID] = data;\r\n        viewCache[categoryID].metadata = metadata;\r\n      })\r\n      .catch((err) => console.error(err));\r\n  }, [categoryID]);\r\n\r\n  useEffect(() => {\r\n    if (props.visible === true) {\r\n      props.changeHeader(categoryMetadata.name);\r\n    }\r\n  }, [props, categoryMetadata.name]);\r\n\r\n  function switchCategory(newId) {\r\n    setCategoryID(newId);\r\n  }\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        cursor: loadingContent ? \"wait\" : \"default\"\r\n      }}\r\n    >\r\n        <div\r\n          style={{\r\n            display: categoryMetadata.id !== 0 ? \"block\" : \"none\",\r\n          }}\r\n        >\r\n          <CategoryItem\r\n            key={categoryID}\r\n            name=\"..\"\r\n            id={categoryMetadata.parentId}\r\n            clickEvent={switchCategory}\r\n          />\r\n        </div>\r\n        {categories.map((c) => (\r\n          <CategoryItem\r\n            key={c.id}\r\n            name={c.name}\r\n            id={c.id}\r\n            clickEvent={switchCategory}\r\n          />\r\n        ))}\r\n        {contents.map((c) => (\r\n          <ContentItem key={c.id} id={c.id} name={c.name} />\r\n        ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CategoryTab;\r\n","import React, { useEffect, useState } from \"react\";\n\nfunction UserSigninTab(props) {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  function changeUsername(evt) {\n    setUsername(evt.target.value);\n  }\n\n  function changePassword(evt) {\n    setPassword(evt.target.value);\n  }\n\n  useEffect(() => {\n    if (props.visible === true) {\n      props.changeHeader(\"Sign in\");\n    }\n  }, [props])\n\n  function submitUserInfo(evt) {\n    if (username !== \"\" && password !== \"\") {\n      const requestBody = {\n        username: username,\n        password: password,\n      };\n      console.log(requestBody)\n      fetch(\"http://newdev.smilebasicsource.com/api/User/authenticate\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"accept\": \"plain/text\"\n        },\n        body: JSON.stringify(requestBody)\n      })\n        .then(res => res.text())\n        .then(data => {\n          localStorage.setItem(\"token\", data);\n          props.setToken(data)\n        })\n        .catch(err => console.error(err));\n    }\n  }\n\n  return (\n    <div>\n        <label>\n          Username:\n          <br/>\n          <input type=\"text\" name=\"username\" value={username} onChange={changeUsername} />\n        </label>\n        <br/>\n        <label>\n          Password:\n          <br/>\n          <input type=\"password\" name=\"password\" value={password} onChange={changePassword} />\n        </label>\n        <br/>\n        <button onClick={submitUserInfo}>Log in</button> \n    </div>\n  )\n}\n\nexport default UserSigninTab;","import React, { useEffect, useState } from \"react\";\n\nfunction UserInfoTab(props) {\n  const [username, setUsername] = useState(\"\")\n\n  useEffect(() => {\n    if (props.usertoken && props.usertoken !== \"\") {\n      fetch(\"https://newdev.smilebasicsource.com/api/User/me\", {\n        headers: {\n          authorization: `Bearer ${props.usertoken}`,\n        },\n      })\n        .then((res) => res.json())\n        .then((data) =>\n          setUsername(data.username)\n        )\n        .catch((err) => console.error(err));\n    }\n  }, [props.usertoken]);\n\n  useEffect(() => {\n    if (props.visible === true) {\n      props.changeHeader(username)\n    }\n  }, [props, username])\n\n  function signOut() {\n    localStorage.setItem(\"token\", \"\");\n    props.setToken(\"\");\n  }\n\n  return (<div>\n    Hiya owo\n    <button onClick={signOut}>sign out</button>\n  </div>)\n}\n\nexport default UserInfoTab;","import React, { useState } from \"react\";\r\nimport TabList from \"./TabList.jsx\";\r\nimport UploadTab from \"./UploadTab.jsx\";\r\nimport ActivityTab from \"./ActivityTab.jsx\";\r\nimport CategoryTab from \"./CategoryTab.jsx\";\r\nimport UserSigninTab from \"./UserSigninTab.jsx\";\r\nimport \"./Sidebar.css\";\r\nimport UserInfoTab from \"./UserInfoTab.jsx\";\r\n\r\nfunction Sidebar(props) {\r\n  const [tab, setTab] = useState(\"folder\");\r\n  const [headerDisplay, setHeaderDisplay] = useState(\"Loading...\")\r\n\r\n  function selectEvent(icon) {\r\n    setTab(icon);\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className=\"sidebar\"\r\n    >\r\n      <header>\r\n        {headerDisplay}\r\n      </header>\r\n      <div\r\n        style={{\r\n          flex: \"1\",\r\n          overflow: \"auto\",\r\n        }}\r\n      >\r\n        <div className={tab !== \"upload\" ? \"hiddenTab\" : \"\"}>\r\n          <UploadTab changeHeader={setHeaderDisplay} visible={tab !== \"upload\" ? false : true}/>\r\n        </div>\r\n        <div className={tab !== \"list-alt\" ? \"hiddenTab\" : \"\"}>\r\n          <ActivityTab changeHeader={setHeaderDisplay} visible={tab !== \"list-alt\" ? false : true} />\r\n        </div>\r\n        <div className={tab !== \"folder\" ? \"hiddenTab\" : \"\"}>\r\n          <CategoryTab changeHeader={setHeaderDisplay} visible={tab !== \"folder\" ? false : true}/>\r\n        </div>\r\n        <div className={tab !== \"user\" ? \"hiddenTab\" : \"\"}>\r\n          {(props.usertoken === \"\") ? \r\n           (<UserSigninTab setToken={props.setToken} changeHeader={setHeaderDisplay} visible={tab !== \"user\" ? false : true}/>) :\r\n           (<UserInfoTab usertoken={props.usertoken} setToken={props.setToken} changeHeader={setHeaderDisplay} visible={tab !== \"user\" ? false : true}/>)}\r\n        </div>\r\n      </div>\r\n      <div style={{\r\n      }}>\r\n        <TabList usertoken={props.usertoken} selectEvent={selectEvent} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Sidebar;\r\n","import React, { lazy, Suspense, useState, useRef } from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport Sidebar from \"./components/sidebar/Sidebar.jsx\";\r\n\r\nconst TestCommentView = lazy(() => import(\"./routes/TestCommentView.jsx\"));\r\nconst TestPageView = lazy(() => import(\"./routes/TestPageView.jsx\"));\r\nconst Home = lazy(() => import(\"./routes/Home.jsx\"));\r\n\r\n// TODO: ugh i should really make constants for things shouldnt i\r\n// just need to figure out how to make them global i guess without\r\n// 1 million props distribution\r\n\r\nfunction App() {\r\n  const [token, setToken] = useState(localStorage.getItem(\"token\"));\r\n  const mainContentRef = useRef()\r\n\r\n  function toggleHide() {\r\n    // ok i did it like this because resetting the state refreshes the entire page\r\n    // which is REALLY bad\r\n    if (mainContentRef.current.className === \"\") mainContentRef.current.className = \"mythehide\";\r\n    else mainContentRef.current.className = \"\" \r\n  }\r\n\r\n  return (\r\n    <div className={`App`}>\r\n      <header className=\"App-header\">\r\n        <button onClick={toggleHide}>toggle sidebar view</button>\r\n      </header>\r\n      <main ref={mainContentRef}>\r\n        <Router>\r\n          <div className=\"content\">\r\n            <Suspense fallback={<div>Loading...</div>}>\r\n              <Switch>\r\n                <Route\r\n                  path=\"/sbs-sue-client/page/:pid\"\r\n                  component={TestPageView}\r\n                />\r\n                <Route\r\n                  path=\"/sbs-sue-client/chat/:pid\"\r\n                  component={() => (\r\n                    <TestCommentView usertoken={token}></TestCommentView>\r\n                  )}\r\n                />\r\n                <Route path=\"\" component={Home} />\r\n              </Switch>\r\n            </Suspense>\r\n          </div>\r\n          <Sidebar setToken={setToken} usertoken={token} />\r\n            {console.log(\"Hello<\")}\r\n        </Router>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App.jsx';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}