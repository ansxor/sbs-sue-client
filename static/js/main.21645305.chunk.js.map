{"version":3,"sources":["components/TabButton.jsx","components/UserTabButton.jsx","components/TabList.jsx","components/UploadTab.jsx","components/ActivityTab.jsx","components/CategoryItem.jsx","components/ContentItem.jsx","components/CategoryTab.jsx","components/Sidebar.jsx","components/TestPageView.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["TabButton","props","onClick","selectEvent","icon","className","selected","UserTabButton","useState","userImg","setUserImg","useEffect","usertoken","fetch","headers","authorization","then","res","json","data","avatar","catch","err","console","error","style","display","src","alt","TabList","selectedTab","setSelectedTab","map","i","memo","UploadTab","uploadedImage","setUploadedImage","visible","changeHeader","onChange","event","file","target","files","URL","createObjectURL","type","accept","maxWidth","maxHeight","margin","ActivityTab","CategoryItem","clickEvent","id","name","ContentItem","viewCache","CategoryTab","categoryID","setCategoryID","categoryMetadata","setCategoryMetadata","categories","setCategories","contents","setContents","loadingContent","setLoadingContent","switchCategory","newId","switchPage","log","changePage","cachedCategoryID","category","content","metadata","params","JSON","stringify","parentIds","sort","url","parentId","pop","filter","x","cursor","c","Sidebar","tab","setTab","headerDisplay","setHeaderDisplay","flexDirection","width","height","overflow","backgroundColor","borderLeft","paddingTop","paddingBottom","paddingLeft","marginBottom","fontSize","borderBottom","flex","TestPageView","setContent","page","App","classState","setClassState","currentPageID","setCurrentPageID","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.21645305.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction TabButton(props) {\r\n  function selectOption() {\r\n    if (props.selectEvent) props.selectEvent(props.icon);\r\n  }\r\n\r\n  return (\r\n    <button onClick={selectOption} className={props.selected ? \"selected\" : \"\"}>\r\n      <i className={`fa fa-${props.icon}`}></i>\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default TabButton;\r\n","import React, { useEffect, useState } from \"react\";\n\nfunction UserTabButton(props) {\n  const [userImg, setUserImg] = useState(\"\");\n\n  function selectOption() {\n    if (props.selectEvent) props.selectEvent(props.icon);\n  }\n\n  useEffect(() => {\n    if (props.usertoken && props.usertoken !== \"\") {\n      fetch(\"https://newdev.smilebasicsource.com/api/User/me\", {\n        headers: {\n          authorization: `Bearer ${props.usertoken}`,\n        },\n      })\n        .then((res) => res.json())\n        .then((data) =>\n          setUserImg(\n            `https://newdev.smilebasicsource.com/api/file/raw/${data.avatar}?size=64&crop=true`\n          )\n        )\n        .catch((err) => console.error(err));\n    }\n  }, [props.usertoken]);\n\n  return (\n    <button onClick={selectOption} className={props.selected ? \"selected\" : \"\"}>\n      <i\n        className={`fa fa-user`}\n        style={{\n          display: userImg !== \"\" ? \"none\" : \"\",\n        }}\n      ></i>\n      <img\n        src={userImg}\n        alt=\"User Avatar\"\n        style={{\n          display: userImg === \"\" ? \"none\" : \"\",\n        }}\n      />\n    </button>\n  );\n}\n\nexport default UserTabButton;\n","import React, { memo, useState } from \"react\";\r\nimport \"./TabList.css\";\r\nimport TabButton from \"./TabButton.jsx\";\r\nimport UserTabButton from \"./UserTabButton.jsx\";\r\n\r\nfunction TabList(props) {\r\n  const [selectedTab, setSelectedTab] = useState(\"upload\");\r\n  const iconList = [\"upload\", \"list-alt\", \"folder\", \"heart\"];\r\n\r\n  function selectEvent(icon) {\r\n    setSelectedTab(icon);\r\n    if (props.selectEvent) props.selectEvent(icon);\r\n  }\r\n\r\n  return (\r\n    <div className=\"tabList\">\r\n      {iconList.map((i) => (\r\n        <TabButton\r\n          key={i}\r\n          selectEvent={selectEvent}\r\n          icon={i}\r\n          selected={i === selectedTab ? true : false}\r\n        />\r\n      ))}\r\n      <UserTabButton selectEvent={selectEvent} usertoken={props.usertoken} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default memo(TabList);\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nfunction UploadTab(props) {\r\n  const [uploadedImage, setUploadedImage] = useState(\"\");\r\n\r\n  function handleChange(event) {\r\n    const file = event.target.files[0];\r\n    if (file) setUploadedImage(URL.createObjectURL(file));\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (props.visible === true) {\r\n      props.changeHeader(\"Upload Image\");\r\n    }\r\n  }, [props]);\r\n\r\n  return (\r\n    <div>\r\n      <input\r\n        style={{}}\r\n        onChange={handleChange}\r\n        type=\"file\"\r\n        accept=\"image/*\"\r\n      ></input>\r\n      <img\r\n        src={uploadedImage}\r\n        alt=\"Pasted content\"\r\n        style={{\r\n          maxWidth: \"100%\",\r\n          maxHeight: \"100%\",\r\n          margin: \"auto\",\r\n          display: \"block\",\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UploadTab;\r\n","import React, {useEffect} from \"react\";\r\n\r\nfunction ActivityTab(props) {\r\n  useEffect(() => {\r\n    if (props.visible === true) {\r\n      props.changeHeader(\"Activity\");\r\n    }\r\n  }, [props]);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        margin: \"900px\",\r\n      }}\r\n    >\r\n      HOAISDHIOASDHOASIDHOASIHDoAS\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ActivityTab;\r\n","import React from \"react\";\r\nimport \"./CategoryViewItem.css\";\r\n\r\nfunction CategoryItem(props) {\r\n  return (\r\n    <button onClick={() => props.clickEvent(props.id)}>\r\n      <i className=\"fa fa-folder-open\"></i> {props.name}\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default CategoryItem;\r\n","import React from \"react\";\r\nimport \"./CategoryViewItem.css\";\r\n\r\nfunction ContentItem(props) {\r\n  return (\r\n    <button onClick={() => props.clickEvent(props.id)}>\r\n      <i className=\"fa fa-file\"></i> {props.name}\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default ContentItem;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport CategoryItem from \"./CategoryItem.jsx\";\r\nimport ContentItem from \"./ContentItem.jsx\";\r\n\r\nlet viewCache = {};\r\n\r\nfunction CategoryTab(props) {\r\n  const [categoryID, setCategoryID] = useState(props.id || 0);\r\n  const [categoryMetadata, setCategoryMetadata] = useState({name: \"\", id: 0});\r\n  const [categories, setCategories] = useState([]);\r\n  const [contents, setContents] = useState([]);\r\n  const [loadingContent, setLoadingContent] = useState(false);\r\n\r\n  useEffect(() => {\r\n    let cachedCategoryID = categoryID;\r\n    if (viewCache[cachedCategoryID]) {\r\n      // we need to do safety checks against every single one of these just to make sure that the program\r\n      // doesn't try to overwrite anything when quickly switching between categories, this doesn't 100%\r\n      // work but it's something lol\r\n      if (cachedCategoryID === categoryID)\r\n        if (viewCache[categoryID].category !== {})\r\n          setCategories(viewCache[categoryID].category);\r\n        else setCategories([]);\r\n      if (cachedCategoryID === categoryID)\r\n        if (viewCache[categoryID].content !== {})\r\n          setContents(viewCache[categoryID].content);\r\n        else setContents([]);\r\n      if (cachedCategoryID === categoryID)\r\n        if (viewCache[categoryID].metadata !== {})\r\n          setCategoryMetadata(viewCache[categoryID].metadata);\r\n        else setCategoryMetadata({});\r\n    }\r\n    const params = JSON.stringify({\r\n      parentIds: [categoryID],\r\n      sort: \"name\",\r\n    });\r\n    const url = `https://newdev.smilebasicsource.com/api/Read/chain?requests=content-${params}&content=id,parentid,name&requests=category-${params}&category=id,parentId,name&requests=category.0parentId`;\r\n    setLoadingContent(true);\r\n    fetch(url)\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        // if the category isn't the root id, then extract the metadata about the current category\r\n        let metadata = { name: \"[Root]\", parentId: 0, id: 0 };\r\n        if (categoryID !== 0) {\r\n          metadata = data.category.pop();\r\n        }\r\n        setCategoryMetadata(metadata);\r\n        if (data.category) setCategories(data.category);\r\n        else setCategories([]);\r\n        if (data.content) {\r\n          // This is to filter out all of the garbage user pages at the root directory\r\n          if (categoryID === 0) {\r\n            data.content = data.content.filter((x) => x.name !== \"Userpage\");\r\n          }\r\n          setContents(data.content);\r\n        } else setContents([]);\r\n        setLoadingContent(false);\r\n        viewCache[categoryID] = data;\r\n        viewCache[categoryID].metadata = metadata;\r\n      })\r\n      .catch((err) => console.error(err));\r\n  }, [categoryID]);\r\n\r\n  useEffect(() => {\r\n    if (props.visible === true) {\r\n      props.changeHeader(categoryMetadata.name);\r\n    }\r\n  }, [props, categoryMetadata.name]);\r\n\r\n  function switchCategory(newId) {\r\n    setCategoryID(newId);\r\n  }\r\n\r\n  function switchPage(newId) {\r\n    console.log(newId)\r\n    props.changePage(newId)\r\n  }\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        cursor: loadingContent ? \"wait\" : \"default\"\r\n      }}\r\n    >\r\n        <div\r\n          style={{\r\n            display: categoryMetadata.id !== 0 ? \"block\" : \"none\",\r\n          }}\r\n        >\r\n          <CategoryItem\r\n            key={categoryID}\r\n            name=\"..\"\r\n            id={categoryMetadata.parentId}\r\n            clickEvent={switchCategory}\r\n          />\r\n        </div>\r\n        {categories.map((c) => (\r\n          <CategoryItem\r\n            key={c.id}\r\n            name={c.name}\r\n            id={c.id}\r\n            clickEvent={switchCategory}\r\n          />\r\n        ))}\r\n        {contents.map((c) => (\r\n          <ContentItem key={c.id} id={c.id} name={c.name} clickEvent={switchPage} />\r\n        ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CategoryTab;\r\n","import React, { useState } from \"react\";\r\nimport TabList from \"./TabList.jsx\";\r\nimport UploadTab from \"./UploadTab.jsx\";\r\nimport ActivityTab from \"./ActivityTab.jsx\";\r\nimport CategoryTab from \"./CategoryTab.jsx\";\r\nimport \"./Sidebar.css\";\r\n\r\nfunction Sidebar(props) {\r\n  const [tab, setTab] = useState(\"upload\");\r\n  const [headerDisplay, setHeaderDisplay] = useState(\"Loading...\")\r\n\r\n  function selectEvent(icon) {\r\n    setTab(icon);\r\n  }\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        overflow: \"hidden\",\r\n        backgroundColor: \"white\",\r\n        borderLeft: \"1px solid gray\"\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          width: \"100%\",\r\n          paddingTop: \"0.5em\",\r\n          paddingBottom: \"0.5em\",\r\n          paddingLeft: \"0.5em\",\r\n          marginBottom: \"0.1em\",\r\n          fontSize: \"24px\",\r\n          backgroundColor: \"white\",\r\n          borderBottom: \"1px solid gray\"\r\n        }}\r\n      >\r\n        {headerDisplay}\r\n      </div>\r\n      <div\r\n        style={{\r\n          flex: \"1\",\r\n          overflow: \"auto\",\r\n        }}\r\n      >\r\n        <div className={tab !== \"upload\" ? \"hiddenTab\" : \"\"}>\r\n          <UploadTab changeHeader={setHeaderDisplay} visible={tab !== \"upload\" ? false : true}/>\r\n        </div>\r\n        <div className={tab !== \"list-alt\" ? \"hiddenTab\" : \"\"}>\r\n          <ActivityTab changeHeader={setHeaderDisplay} visible={tab !== \"list-alt\" ? false : true} />\r\n        </div>\r\n        <div className={tab !== \"folder\" ? \"hiddenTab\" : \"\"}>\r\n          <CategoryTab changePage={props.changePage} changeHeader={setHeaderDisplay} visible={tab !== \"folder\" ? false : true}/>\r\n        </div>\r\n      </div>\r\n      <div style={{\r\n      }}>\r\n        <TabList usertoken={props.usertoken} selectEvent={selectEvent} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Sidebar;\r\n","import React, { useEffect, useState } from \"react\";\n\nfunction TestPageView(props) {\n  const [content, setContent] = useState(\"\");\n\n  useEffect(() => {\n    fetch(\n      `https://newdev.smilebasicsource.com/api/Content?Ids=${props.id}`\n    )\n      .then(res => res.json())\n      .then(data => {\n        const page = data[0]\n        setContent(page.content)\n      })\n      .catch(err => console.error(err));\n    setContent(props.id);\n  }, [props.id]);\n\n  return <div style={{\n    width: \"100%\",\n    height: \"100%\"\n  }}>{content}</div>;\n}\n\nexport default TestPageView;\n","import React, { useState } from \"react\";\r\nimport \"./App.css\";\r\nimport Sidebar from \"./components/Sidebar.jsx\";\r\nimport TestPageView from \"./components/TestPageView\";\r\n\r\nfunction App() {\r\n  const [classState, setClassState] = useState(\"\");\r\n  const [currentPageID, setCurrentPageID] = useState(1829);\r\n\r\n  function toggleHide() {\r\n    if (classState === \"\") setClassState(\"mythehide\");\r\n    else setClassState(\"\");\r\n    console.log(classState);\r\n  }\r\n\r\n  function changePage(newId) {\r\n    setCurrentPageID(newId);\r\n  }\r\n\r\n  return (\r\n    <div className={`App`}>\r\n      <header className=\"App-header\">\r\n        <button onClick={toggleHide}>toggle sidebar view</button>\r\n      </header>\r\n      <main className={classState}>\r\n        <div className=\"content\">\r\n          <TestPageView id={currentPageID} />\r\n        </div>\r\n        <Sidebar\r\n          changePage={changePage}\r\n        />\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App.jsx';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}